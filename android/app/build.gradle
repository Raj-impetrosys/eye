def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException('Flutter SDK not found. Define location with flutter.sdk in the local.properties file.')
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId 'com.example.eye'
        minSdkVersion 24
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
//            abiFilters 'x86'
            abiFilters 'armeabi-v7a'
        // abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            multiDexEnabled true
            shrinkResources false
            minifyEnabled false
        //            android.bundle.enableUncompressedNativeLibs=false
        }
    }

    sourceSets.main {
        jniLibs.srcDirs 'jniLibs'
        //        jniLibs.srcDir 'src/main/libs' //set libs as .so's location instead of jni
        jni.srcDirs = []
    //            jniLibs.srcDirs 'libs/jniLibs'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation files('D:/Impetrosys/eye/android/libs/mantra.mis100.jar')
    implementation fileTree(dir: 'libs', include: '*.jar')
//    implementation 'com.android.support:appcompat-v7:28.0.0-alpha1'
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
////    implementation project(':mantra.mis100')
//    implementation files('libs/mantra.mis100.jar')
}
